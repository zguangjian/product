<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Model;

/**
 * App\Models\Menu
 *
 * @property int $id
 * @property string $name 菜单名称
 * @property string $icon 菜单图标
 * @property int $parent_id 父级菜单ID
 * @property string $url 菜单链接
 * @property int $status 状态 1显示 2隐藏
 * @property int $sort 排序
 * @property string|null $content 描述
 * @property \Illuminate\Support\Carbon|null $created_at
 * @property \Illuminate\Support\Carbon|null $updated_at
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu newModelQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu newQuery()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu query()
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereContent($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereCreatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereIcon($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereName($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereParentId($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereSort($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereStatus($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereUpdatedAt($value)
 * @method static \Illuminate\Database\Eloquent\Builder|\App\Models\Menu whereUrl($value)
 * @mixin \Eloquent
 */
class Menu extends BaseModel
{
    protected $table = "menu";

    protected $fillable = ['parent_id', 'name', 'url', 'icons', 'sort', 'status', 'content'];

    public function permissions()
    {
        return $this->hasOne(Permissions::class, 'mid', 'id');
    }


//    public static function create($attributes = [])
//    {
//        return parent::create($attributes);
//        return tap(parent::create($attributes), function ($data) use ($attributes) {
//            dd($attributes);
//        });
//    }
    public static function create($attributes = [])
    {
        return parent::create($attributes); // TODO: Change the autogenerated stub
    }

    /**
     * 获取父级菜单
     * @param int $parent_id
     * @return array
     */
    public static function parentMenu($parent_id = 0)
    {
        $menuTableList = Menu::orderBy("sort")->get()->toArray();
        return getTreeArray($menuTableList, $parent_id, 2);
    }


}
